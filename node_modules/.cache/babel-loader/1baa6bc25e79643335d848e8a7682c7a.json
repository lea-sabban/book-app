{"ast":null,"code":"var _jsxFileName = \"/Users/sabbanl/Dropbox (Leamotion)/HelpScout/helpscout-books/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CardGridView from \"./cardview\";\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from \"reactstrap\";\nimport { render } from \"react-dom\";\nimport { Router, Link } from \"@reach/router\";\nimport DetailView from \"./detail\";\n\nlet GridView = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"GridView\"), React.createElement(\"nav\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/gridview\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Grid View\"), \" |\", \" \", React.createElement(Link, {\n  to: \"/layoutview\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Layout View\")));\n\nlet Dash = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Layout View\");\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      newBookData: {\n        title: \"\",\n        rating: \"\"\n      },\n      editBookData: {\n        id: \"\",\n        title: \"\",\n        rating: \"\"\n      },\n      newBookModal: false,\n      editBookModal: false\n    };\n  }\n\n  componentWillMount() {\n    this._refreshBooks();\n  }\n\n  toggleNewBookModal() {\n    this.setState({\n      newBookModal: !this.state.newBookModal\n    });\n  }\n\n  toggleEditBookModal() {\n    this.setState({\n      editBookModal: !this.state.editBookModal\n    });\n  }\n\n  onEdit(book) {\n    console.log(book);\n  }\n\n  addBook() {\n    axios.post(\"http://localhost:3000/books\", this.state.newBookData).then(response => {\n      let books = this.state.books;\n      books.push(response.data);\n      this.setState({\n        books,\n        newBookModal: false,\n        newBookData: {\n          title: \"\",\n          rating: \"\"\n        }\n      });\n    });\n  }\n\n  updateBook() {\n    let _this$state$editBookD = this.state.editBookData,\n        title = _this$state$editBookD.title,\n        rating = _this$state$editBookD.rating;\n    axios.put(\"http://localhost:3000/books/\" + this.state.editBookData.id, {\n      title,\n      rating\n    }).then(response => {\n      this._refreshBooks();\n\n      this.setState({\n        editBookModal: false,\n        editBookData: {\n          id: \"\",\n          title: \"\",\n          rating: \"\"\n        }\n      });\n    });\n  }\n\n  editBook(book) {\n    const id = book.id,\n          title = book.title,\n          rating = book.rating;\n    this.setState({\n      editBookData: {\n        id,\n        title,\n        rating\n      },\n      editBookModal: !this.state.editBookModal\n    });\n  }\n\n  deleteBook(book) {\n    const id = book.id;\n    axios.delete(\"http://localhost:3000/books/\" + id).then(response => {\n      this._refreshBooks();\n    });\n  }\n\n  _refreshBooks() {\n    axios.get(\"http://localhost:3000/books\").then(response => {\n      this.setState({\n        books: response.data\n      });\n    });\n  }\n\n  render() {\n    let books = this.state.books.map(book => {\n      return React.createElement(\"tr\", {\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, book.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, book.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, book.rating), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        size: \"sm\",\n        className: \"mr-2\",\n        onClick: this.editBook.bind(this, book.id, book.title, book.rating),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: this.deleteBook(book),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: this.viewDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"View Detail\")));\n    });\n    console.log(this.state.books);\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(DetailView, {\n      path: \"/detail/:id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Books App\"), React.createElement(CardGridView, {\n      data: this.state.books,\n      onDelete: book => this.deleteBook(book),\n      onEdit: book => this.editBook(book),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"my-3\",\n      color: \"primary\",\n      onClick: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Add Book\"), React.createElement(Modal, {\n      isOpen: this.state.newBookModal,\n      toggle: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Add a new book\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      id: \"title\",\n      value: this.state.newBookData.title,\n      onChange: e => {\n        let newBookData = this.state.newBookData;\n        newBookData.title = e.target.value;\n        this.setState({\n          newBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(Input, {\n      id: \"rating\",\n      value: this.state.newBookData.rating,\n      onChange: e => {\n        let newBookData = this.state.newBookData;\n        newBookData.rating = e.target.value;\n        this.setState({\n          newBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.addBook.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Add Book\"), \" \", React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Modal, {\n      isOpen: this.state.editBookModal,\n      toggle: this.toggleEditBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleEditBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Edit a new book\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      id: \"title\",\n      value: this.state.editBookData.title,\n      onChange: e => {\n        let editBookData = this.state.editBookData;\n        editBookData.title = e.target.value;\n        this.setState({\n          editBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(Input, {\n      id: \"rating\",\n      value: this.state.editBookData.rating,\n      onChange: e => {\n        let editBookData = this.state.editBookData;\n        editBookData.rating = e.target.value;\n        this.setState({\n          editBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.updateBook.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Update Book\"), \" \", React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleEditBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, books)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sabbanl/Dropbox (Leamotion)/HelpScout/helpscout-books/src/App.js"],"names":["React","Component","axios","CardGridView","Input","FormGroup","Label","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","render","Router","Link","DetailView","GridView","Dash","App","state","books","newBookData","title","rating","editBookData","id","newBookModal","editBookModal","componentWillMount","_refreshBooks","toggleNewBookModal","setState","toggleEditBookModal","onEdit","book","console","log","addBook","post","then","response","push","data","updateBook","put","editBook","deleteBook","delete","get","map","bind","viewDetail","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CardGridView from \"./cardview\";\nimport {\n  Input,\n  FormGroup,\n  Label,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n  Button\n} from \"reactstrap\";\n\nimport { render } from \"react-dom\";\nimport { Router, Link } from \"@reach/router\";\nimport DetailView from \"./detail\";\n\nlet GridView = () => (\n  <div>\n    <h1>GridView</h1>\n    <nav>\n      <Link to=\"/gridview\">Grid View</Link> |{\" \"}\n      <Link to=\"/layoutview\">Layout View</Link>\n    </nav>\n  </div>\n);\nlet Dash = () => <div>Layout View</div>;\n\nclass App extends Component {\n  state = {\n    books: [],\n    newBookData: {\n      title: \"\",\n      rating: \"\"\n    },\n    editBookData: {\n      id: \"\",\n      title: \"\",\n      rating: \"\"\n    },\n    newBookModal: false,\n    editBookModal: false\n  };\n\n  componentWillMount() {\n    this._refreshBooks();\n  }\n  toggleNewBookModal() {\n    this.setState({\n      newBookModal: !this.state.newBookModal\n    });\n  }\n  toggleEditBookModal() {\n    this.setState({\n      editBookModal: !this.state.editBookModal\n    });\n  }\n\n  onEdit(book) {\n    console.log(book);\n  }\n\n  addBook() {\n    axios\n      .post(\"http://localhost:3000/books\", this.state.newBookData)\n      .then(response => {\n        let { books } = this.state;\n\n        books.push(response.data);\n\n        this.setState({\n          books,\n          newBookModal: false,\n          newBookData: {\n            title: \"\",\n            rating: \"\"\n          }\n        });\n      });\n  }\n  updateBook() {\n    let { title, rating } = this.state.editBookData;\n\n    axios\n      .put(\"http://localhost:3000/books/\" + this.state.editBookData.id, {\n        title,\n        rating\n      })\n      .then(response => {\n        this._refreshBooks();\n\n        this.setState({\n          editBookModal: false,\n          editBookData: { id: \"\", title: \"\", rating: \"\" }\n        });\n      });\n  }\n  editBook(book) {\n    const { id, title, rating } = book;\n    this.setState({\n      editBookData: { id, title, rating },\n      editBookModal: !this.state.editBookModal\n    });\n  }\n  deleteBook(book) {\n    const { id } = book;\n    axios.delete(\"http://localhost:3000/books/\" + id).then(response => {\n      this._refreshBooks();\n    });\n  }\n  _refreshBooks() {\n    axios.get(\"http://localhost:3000/books\").then(response => {\n      this.setState({\n        books: response.data\n      });\n    });\n  }\n  render() {\n    let books = this.state.books.map(book => {\n      return (\n        <tr key={book.id}>\n          <td>{book.id}</td>\n          <td>{book.title}</td>\n          <td>{book.rating}</td>\n          <td>\n            <Button\n              color=\"success\"\n              size=\"sm\"\n              className=\"mr-2\"\n              onClick={this.editBook.bind(\n                this,\n                book.id,\n                book.title,\n                book.rating\n              )}\n            >\n              Edit\n            </Button>\n            <Button color=\"danger\" size=\"sm\" onClick={this.deleteBook(book)}>\n              Delete\n            </Button>\n            <Button color=\"danger\" size=\"sm\" onClick={this.viewDetail}>\n              View Detail\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n    console.log(this.state.books);\n    return (\n      <div className=\"App container\">\n        <Router>\n          <DetailView path=\"/detail/:id\" />\n        </Router>\n        <h1>Books App</h1>\n        <CardGridView\n          data={this.state.books}\n          onDelete={book => this.deleteBook(book)}\n          onEdit={book => this.editBook(book)}\n        />\n\n        <Button\n          className=\"my-3\"\n          color=\"primary\"\n          onClick={this.toggleNewBookModal.bind(this)}\n        >\n          Add Book\n        </Button>\n\n        <Modal\n          isOpen={this.state.newBookModal}\n          toggle={this.toggleNewBookModal.bind(this)}\n        >\n          <ModalHeader toggle={this.toggleNewBookModal.bind(this)}>\n            Add a new book\n          </ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                id=\"title\"\n                value={this.state.newBookData.title}\n                onChange={e => {\n                  let { newBookData } = this.state;\n\n                  newBookData.title = e.target.value;\n\n                  this.setState({ newBookData });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"rating\">Rating</Label>\n              <Input\n                id=\"rating\"\n                value={this.state.newBookData.rating}\n                onChange={e => {\n                  let { newBookData } = this.state;\n\n                  newBookData.rating = e.target.value;\n\n                  this.setState({ newBookData });\n                }}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.addBook.bind(this)}>\n              Add Book\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              onClick={this.toggleNewBookModal.bind(this)}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.editBookModal}\n          toggle={this.toggleEditBookModal.bind(this)}\n        >\n          <ModalHeader toggle={this.toggleEditBookModal.bind(this)}>\n            Edit a new book\n          </ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"title\">Title</Label>\n              <Input\n                id=\"title\"\n                value={this.state.editBookData.title}\n                onChange={e => {\n                  let { editBookData } = this.state;\n\n                  editBookData.title = e.target.value;\n\n                  this.setState({ editBookData });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"rating\">Rating</Label>\n              <Input\n                id=\"rating\"\n                value={this.state.editBookData.rating}\n                onChange={e => {\n                  let { editBookData } = this.state;\n\n                  editBookData.rating = e.target.value;\n\n                  this.setState({ editBookData });\n                }}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.updateBook.bind(this)}>\n              Update Book\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              onClick={this.toggleEditBookModal.bind(this)}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Title</th>\n              <th>Rating</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>{books}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}