{"ast":null,"code":"var _jsxFileName = \"/Users/sabbanl/Dropbox (Leamotion)/HelpScout/helpscout-books/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport CardGridView from './cardview';\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      newBookData: {\n        title: '',\n        rating: ''\n      },\n      editBookData: {\n        id: '',\n        title: '',\n        rating: ''\n      },\n      newBookModal: false,\n      editBookModal: false\n    };\n  }\n\n  componentWillMount() {\n    this._refreshBooks();\n  }\n\n  toggleNewBookModal() {\n    this.setState({\n      newBookModal: !this.state.newBookModal\n    });\n  }\n\n  toggleEditBookModal() {\n    this.setState({\n      editBookModal: !this.state.editBookModal\n    });\n  }\n\n  addBook() {\n    axios.post('http://localhost:3000/books', this.state.newBookData).then(response => {\n      let books = this.state.books;\n      books.push(response.data);\n      this.setState({\n        books,\n        newBookModal: false,\n        newBookData: {\n          title: '',\n          rating: ''\n        }\n      });\n    });\n  }\n\n  updateBook() {\n    let _this$state$editBookD = this.state.editBookData,\n        title = _this$state$editBookD.title,\n        rating = _this$state$editBookD.rating;\n    axios.put('http://localhost:3000/books/' + this.state.editBookData.id, {\n      title,\n      rating\n    }).then(response => {\n      this._refreshBooks();\n\n      this.setState({\n        editBookModal: false,\n        editBookData: {\n          id: '',\n          title: '',\n          rating: ''\n        }\n      });\n    });\n  }\n\n  editBook(id, title, rating) {\n    this.setState({\n      editBookData: {\n        id,\n        title,\n        rating\n      },\n      editBookModal: !this.state.editBookModal\n    });\n  }\n\n  deleteBook(id) {\n    axios.delete('http://localhost:3000/books/' + id).then(response => {\n      this._refreshBooks();\n    });\n  }\n\n  _refreshBooks() {\n    axios.get('http://localhost:3000/books').then(response => {\n      this.setState({\n        books: response.data\n      });\n    });\n  }\n\n  render() {\n    let books = this.state.books.map(book => {\n      return React.createElement(\"tr\", {\n        key: book.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, book.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, book.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, book.rating), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"success\",\n        size: \"sm\",\n        className: \"mr-2\",\n        onClick: this.editBook.bind(this, book.id, book.title, book.rating),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: this.deleteBook.bind(this, book.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Delete\")));\n    });\n    console.log(books);\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Books App\"), React.createElement(CardGridView, {\n      data: books,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"my-3\",\n      color: \"primary\",\n      onClick: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Add Book\"), React.createElement(Modal, {\n      isOpen: this.state.newBookModal,\n      toggle: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Add a new book\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      id: \"title\",\n      value: this.state.newBookData.title,\n      onChange: e => {\n        let newBookData = this.state.newBookData;\n        newBookData.title = e.target.value;\n        this.setState({\n          newBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(Input, {\n      id: \"rating\",\n      value: this.state.newBookData.rating,\n      onChange: e => {\n        let newBookData = this.state.newBookData;\n        newBookData.rating = e.target.value;\n        this.setState({\n          newBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.addBook.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Add Book\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleNewBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Modal, {\n      isOpen: this.state.editBookModal,\n      toggle: this.toggleEditBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleEditBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Edit a new book\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      id: \"title\",\n      value: this.state.editBookData.title,\n      onChange: e => {\n        let editBookData = this.state.editBookData;\n        editBookData.title = e.target.value;\n        this.setState({\n          editBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(Input, {\n      id: \"rating\",\n      value: this.state.editBookData.rating,\n      onChange: e => {\n        let editBookData = this.state.editBookData;\n        editBookData.rating = e.target.value;\n        this.setState({\n          editBookData\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.updateBook.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Update Book\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleEditBookModal.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, books)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sabbanl/Dropbox (Leamotion)/HelpScout/helpscout-books/src/App.js"],"names":["React","Component","axios","CardGridView","Input","FormGroup","Label","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","App","state","books","newBookData","title","rating","editBookData","id","newBookModal","editBookModal","componentWillMount","_refreshBooks","toggleNewBookModal","setState","toggleEditBookModal","addBook","post","then","response","push","data","updateBook","put","editBook","deleteBook","delete","get","render","map","book","bind","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport CardGridView from './cardview';\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\n\nclass App extends Component {\n  state = {\n    books: [],\n    newBookData: {\n      title: '',\n      rating: ''\n    },\n    editBookData: {\n      id: '',\n      title: '',\n      rating: ''\n    },\n    newBookModal: false,\n    editBookModal: false\n  }\n  \n  componentWillMount() {\n    this._refreshBooks();\n  }\n  toggleNewBookModal() {\n    this.setState({\n      newBookModal: ! this.state.newBookModal\n    });\n  }\n  toggleEditBookModal() {\n    this.setState({\n      editBookModal: ! this.state.editBookModal\n    });\n  }\n  addBook() {\n    axios.post('http://localhost:3000/books', this.state.newBookData).then((response) => {\n      let { books } = this.state;\n\n      books.push(response.data);\n\n      this.setState({ books, newBookModal: false, newBookData: {\n        title: '',\n        rating: ''\n      }});\n    });\n  }\n  updateBook() {\n    let { title, rating } = this.state.editBookData;\n\n    axios.put('http://localhost:3000/books/' + this.state.editBookData.id, {\n      title, rating\n    }).then((response) => {\n      this._refreshBooks();\n\n      this.setState({\n        editBookModal: false, editBookData: { id: '', title: '', rating: '' }\n      })\n    });\n  }\n  editBook(id, title, rating) {\n    this.setState({\n      editBookData: { id, title, rating }, editBookModal: ! this.state.editBookModal\n    });\n  }\n  deleteBook(id) {\n    axios.delete('http://localhost:3000/books/' + id).then((response) => {\n      this._refreshBooks();\n    });\n  }\n  _refreshBooks() {\n    axios.get('http://localhost:3000/books').then((response) => {\n      this.setState({\n        books: response.data\n      })\n    });\n  }\n  render() {\n\n    let books = this.state.books.map((book) => {\n      return (\n        <tr key={book.id}>\n          <td>{book.id}</td>\n          <td>{book.title}</td>\n          <td>{book.rating}</td>\n          <td>\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editBook.bind(this, book.id, book.title, book.rating)}>Edit</Button>\n            <Button color=\"danger\" size=\"sm\" onClick={this.deleteBook.bind(this, book.id)}>Delete</Button>\n          </td>\n        </tr>\n      )\n    });\n    console.log(books);\n    return (\n      <div className=\"App container\">\n\n      <h1>Books App</h1>\n      <CardGridView data={ books } />\n\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewBookModal.bind(this)}>Add Book</Button>\n\n      <Modal isOpen={this.state.newBookModal} toggle={this.toggleNewBookModal.bind(this)}>\n        <ModalHeader toggle={this.toggleNewBookModal.bind(this)}>Add a new book</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"title\">Title</Label>\n            <Input id=\"title\" value={this.state.newBookData.title} onChange={(e) => {\n              let { newBookData } = this.state;\n\n              newBookData.title = e.target.value;\n\n              this.setState({ newBookData });\n            }} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"rating\">Rating</Label>\n            <Input id=\"rating\" value={this.state.newBookData.rating} onChange={(e) => {\n              let { newBookData } = this.state;\n\n              newBookData.rating = e.target.value;\n\n              this.setState({ newBookData });\n            }} />\n          </FormGroup>\n\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.addBook.bind(this)}>Add Book</Button>{' '}\n          <Button color=\"secondary\" onClick={this.toggleNewBookModal.bind(this)}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n\n      <Modal isOpen={this.state.editBookModal} toggle={this.toggleEditBookModal.bind(this)}>\n        <ModalHeader toggle={this.toggleEditBookModal.bind(this)}>Edit a new book</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"title\">Title</Label>\n            <Input id=\"title\" value={this.state.editBookData.title} onChange={(e) => {\n              let { editBookData } = this.state;\n\n              editBookData.title = e.target.value;\n\n              this.setState({ editBookData });\n            }} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"rating\">Rating</Label>\n            <Input id=\"rating\" value={this.state.editBookData.rating} onChange={(e) => {\n              let { editBookData } = this.state;\n\n              editBookData.rating = e.target.value;\n\n              this.setState({ editBookData });\n            }} />\n          </FormGroup>\n\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.updateBook.bind(this)}>Update Book</Button>{' '}\n          <Button color=\"secondary\" onClick={this.toggleEditBookModal.bind(this)}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n\n\n        <Table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Title</th>\n              <th>Rating</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {books}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}